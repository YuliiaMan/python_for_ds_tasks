{
  "nbformat": 4,
  "nbformat_minor": 0,
  "metadata": {
    "colab": {
      "provenance": [],
      "mount_file_id": "1KE38I5X6opSoI1FwsWcrOgmH5KIx0aWq",
      "authorship_tag": "ABX9TyMquahfMZn4wOQSLs6BbvKO",
      "include_colab_link": true
    },
    "kernelspec": {
      "name": "python3",
      "display_name": "Python 3"
    },
    "language_info": {
      "name": "python"
    }
  },
  "cells": [
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "view-in-github",
        "colab_type": "text"
      },
      "source": [
        "<a href=\"https://colab.research.google.com/github/YuliiaMan/python_for_ds_tasks/blob/main/Final%20project\" target=\"_parent\"><img src=\"https://colab.research.google.com/assets/colab-badge.svg\" alt=\"Open In Colab\"/></a>"
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "**ФІНАЛЬНИЙ ПРОЕКТ** (**Аналіз даних про продаж італійського бістро**)"
      ],
      "metadata": {
        "id": "8QvlnJ34x3bI"
      }
    },
    {
      "cell_type": "markdown",
      "source": [
        "**Завантаження бібліотек**"
      ],
      "metadata": {
        "id": "5tJZIuQoyNIR"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "import pandas as pd\n",
        "import numpy as np\n",
        "from matplotlib import pyplot as plt\n",
        "import seaborn as sns\n",
        "import warnings"
      ],
      "metadata": {
        "id": "uBErZRN0i-GS"
      },
      "execution_count": 50,
      "outputs": []
    },
    {
      "cell_type": "markdown",
      "source": [
        "**Встановлення бібліотеки, яка потрібна для роботи з Excel файлами з pandas**"
      ],
      "metadata": {
        "id": "DcrXQM9Wot0c"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "!pip install openpyxl"
      ],
      "metadata": {
        "id": "3I4-vcrFfLLe"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "markdown",
      "source": [
        "**Шлях до даних, які записані до змінної df**"
      ],
      "metadata": {
        "id": "TF5B6qpKpeKN"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "from google.colab import drive\n",
        "drive.mount('/content/drive')"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "A9wmktQ0fLHi",
        "outputId": "967a97ac-941e-4bbf-edd8-e7b226f8faf8"
      },
      "execution_count": 52,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Drive already mounted at /content/drive; to attempt to forcibly remount, call drive.mount(\"/content/drive\", force_remount=True).\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "data_path = '/content/drive/MyDrive/Home tasks/large_italian_restaurant_sales.xlsx'\n",
        "df = pd.read_excel(data_path)"
      ],
      "metadata": {
        "id": "2NY7fVKffLBz"
      },
      "execution_count": 53,
      "outputs": []
    },
    {
      "cell_type": "markdown",
      "source": [
        "**0. Аналіз даних перед початком роботи**"
      ],
      "metadata": {
        "id": "rzwww96BhTyX"
      }
    },
    {
      "cell_type": "markdown",
      "source": [
        "\n",
        "\n",
        "*   **Розмір даних**\n",
        "\n",
        "\n"
      ],
      "metadata": {
        "id": "ylAo3pIkhzuy"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "df.shape"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "GvXDHXSUfKzK",
        "outputId": "c3080a3e-e004-4ffd-ef86-e3da427627b9"
      },
      "execution_count": 54,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "(10000, 9)"
            ]
          },
          "metadata": {},
          "execution_count": 54
        }
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "\n",
        "\n",
        "*   **Перегляд набору даних**\n",
        "\n",
        "\n"
      ],
      "metadata": {
        "id": "Pi_NWxYwiIuF"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "df"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 424
        },
        "id": "fKkDQ1lofKUi",
        "outputId": "08e911b6-4f12-47ea-a318-4c92d723c27f"
      },
      "execution_count": 70,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "           Date      Time         Menu Item     Category  Quantity  \\\n",
              "0    2024-11-23  03:48 AM  Margherita Pizza  Main Course         3   \n",
              "1    2024-03-12  03:29 AM     Caprese Salad    Appetizer         1   \n",
              "2    2024-01-17  01:01 AM          Tiramisu      Dessert         2   \n",
              "3    2024-11-04  12:54 AM     Caprese Salad    Appetizer         2   \n",
              "4    2024-12-25  06:36 PM            Gelato      Dessert         2   \n",
              "...         ...       ...               ...          ...       ...   \n",
              "9995 2024-04-27  08:00 AM            Gelato      Dessert         1   \n",
              "9996 2024-01-08  07:52 PM       Panna Cotta      Dessert         5   \n",
              "9997 2024-10-29  03:21 AM           Lasagna  Main Course         1   \n",
              "9998 2024-11-08  11:18 PM     Caprese Salad    Appetizer         1   \n",
              "9999 2024-11-15  03:25 PM          Tiramisu      Dessert         5   \n",
              "\n",
              "      Price (per item)  Revenue  Payment Method Customer Type  Month  \n",
              "0                 10.0     30.0     Credit Card       Dine-In     11  \n",
              "1                  8.0      8.0  Mobile Payment      Takeaway      3  \n",
              "2                  6.5     13.0     Credit Card      Delivery      1  \n",
              "3                  8.0     16.0  Mobile Payment      Delivery     11  \n",
              "4                  4.5      9.0            Cash      Delivery     12  \n",
              "...                ...      ...             ...           ...    ...  \n",
              "9995               4.5      4.5     Credit Card      Delivery      4  \n",
              "9996               5.5     27.5     Credit Card       Dine-In      1  \n",
              "9997              11.5     11.5     Credit Card      Delivery     10  \n",
              "9998               8.0      8.0     Credit Card      Delivery     11  \n",
              "9999               6.5     32.5     Credit Card      Delivery     11  \n",
              "\n",
              "[10000 rows x 10 columns]"
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-291a8f7e-e1dd-497c-b2d7-d04078cfc262\" class=\"colab-df-container\">\n",
              "    <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>Date</th>\n",
              "      <th>Time</th>\n",
              "      <th>Menu Item</th>\n",
              "      <th>Category</th>\n",
              "      <th>Quantity</th>\n",
              "      <th>Price (per item)</th>\n",
              "      <th>Revenue</th>\n",
              "      <th>Payment Method</th>\n",
              "      <th>Customer Type</th>\n",
              "      <th>Month</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>2024-11-23</td>\n",
              "      <td>03:48 AM</td>\n",
              "      <td>Margherita Pizza</td>\n",
              "      <td>Main Course</td>\n",
              "      <td>3</td>\n",
              "      <td>10.0</td>\n",
              "      <td>30.0</td>\n",
              "      <td>Credit Card</td>\n",
              "      <td>Dine-In</td>\n",
              "      <td>11</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>2024-03-12</td>\n",
              "      <td>03:29 AM</td>\n",
              "      <td>Caprese Salad</td>\n",
              "      <td>Appetizer</td>\n",
              "      <td>1</td>\n",
              "      <td>8.0</td>\n",
              "      <td>8.0</td>\n",
              "      <td>Mobile Payment</td>\n",
              "      <td>Takeaway</td>\n",
              "      <td>3</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>2024-01-17</td>\n",
              "      <td>01:01 AM</td>\n",
              "      <td>Tiramisu</td>\n",
              "      <td>Dessert</td>\n",
              "      <td>2</td>\n",
              "      <td>6.5</td>\n",
              "      <td>13.0</td>\n",
              "      <td>Credit Card</td>\n",
              "      <td>Delivery</td>\n",
              "      <td>1</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>2024-11-04</td>\n",
              "      <td>12:54 AM</td>\n",
              "      <td>Caprese Salad</td>\n",
              "      <td>Appetizer</td>\n",
              "      <td>2</td>\n",
              "      <td>8.0</td>\n",
              "      <td>16.0</td>\n",
              "      <td>Mobile Payment</td>\n",
              "      <td>Delivery</td>\n",
              "      <td>11</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>2024-12-25</td>\n",
              "      <td>06:36 PM</td>\n",
              "      <td>Gelato</td>\n",
              "      <td>Dessert</td>\n",
              "      <td>2</td>\n",
              "      <td>4.5</td>\n",
              "      <td>9.0</td>\n",
              "      <td>Cash</td>\n",
              "      <td>Delivery</td>\n",
              "      <td>12</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>...</th>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>9995</th>\n",
              "      <td>2024-04-27</td>\n",
              "      <td>08:00 AM</td>\n",
              "      <td>Gelato</td>\n",
              "      <td>Dessert</td>\n",
              "      <td>1</td>\n",
              "      <td>4.5</td>\n",
              "      <td>4.5</td>\n",
              "      <td>Credit Card</td>\n",
              "      <td>Delivery</td>\n",
              "      <td>4</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>9996</th>\n",
              "      <td>2024-01-08</td>\n",
              "      <td>07:52 PM</td>\n",
              "      <td>Panna Cotta</td>\n",
              "      <td>Dessert</td>\n",
              "      <td>5</td>\n",
              "      <td>5.5</td>\n",
              "      <td>27.5</td>\n",
              "      <td>Credit Card</td>\n",
              "      <td>Dine-In</td>\n",
              "      <td>1</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>9997</th>\n",
              "      <td>2024-10-29</td>\n",
              "      <td>03:21 AM</td>\n",
              "      <td>Lasagna</td>\n",
              "      <td>Main Course</td>\n",
              "      <td>1</td>\n",
              "      <td>11.5</td>\n",
              "      <td>11.5</td>\n",
              "      <td>Credit Card</td>\n",
              "      <td>Delivery</td>\n",
              "      <td>10</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>9998</th>\n",
              "      <td>2024-11-08</td>\n",
              "      <td>11:18 PM</td>\n",
              "      <td>Caprese Salad</td>\n",
              "      <td>Appetizer</td>\n",
              "      <td>1</td>\n",
              "      <td>8.0</td>\n",
              "      <td>8.0</td>\n",
              "      <td>Credit Card</td>\n",
              "      <td>Delivery</td>\n",
              "      <td>11</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>9999</th>\n",
              "      <td>2024-11-15</td>\n",
              "      <td>03:25 PM</td>\n",
              "      <td>Tiramisu</td>\n",
              "      <td>Dessert</td>\n",
              "      <td>5</td>\n",
              "      <td>6.5</td>\n",
              "      <td>32.5</td>\n",
              "      <td>Credit Card</td>\n",
              "      <td>Delivery</td>\n",
              "      <td>11</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "<p>10000 rows × 10 columns</p>\n",
              "</div>\n",
              "    <div class=\"colab-df-buttons\">\n",
              "\n",
              "  <div class=\"colab-df-container\">\n",
              "    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-291a8f7e-e1dd-497c-b2d7-d04078cfc262')\"\n",
              "            title=\"Convert this dataframe to an interactive table.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n",
              "    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n",
              "  </svg>\n",
              "    </button>\n",
              "\n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    .colab-df-buttons div {\n",
              "      margin-bottom: 4px;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "    <script>\n",
              "      const buttonEl =\n",
              "        document.querySelector('#df-291a8f7e-e1dd-497c-b2d7-d04078cfc262 button.colab-df-convert');\n",
              "      buttonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "      async function convertToInteractive(key) {\n",
              "        const element = document.querySelector('#df-291a8f7e-e1dd-497c-b2d7-d04078cfc262');\n",
              "        const dataTable =\n",
              "          await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                    [key], {});\n",
              "        if (!dataTable) return;\n",
              "\n",
              "        const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "          + ' to learn more about interactive tables.';\n",
              "        element.innerHTML = '';\n",
              "        dataTable['output_type'] = 'display_data';\n",
              "        await google.colab.output.renderOutput(dataTable, element);\n",
              "        const docLink = document.createElement('div');\n",
              "        docLink.innerHTML = docLinkHtml;\n",
              "        element.appendChild(docLink);\n",
              "      }\n",
              "    </script>\n",
              "  </div>\n",
              "\n",
              "\n",
              "<div id=\"df-a4686b8f-61a1-4912-8824-5d5847dc274a\">\n",
              "  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-a4686b8f-61a1-4912-8824-5d5847dc274a')\"\n",
              "            title=\"Suggest charts\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "     width=\"24px\">\n",
              "    <g>\n",
              "        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n",
              "    </g>\n",
              "</svg>\n",
              "  </button>\n",
              "\n",
              "<style>\n",
              "  .colab-df-quickchart {\n",
              "      --bg-color: #E8F0FE;\n",
              "      --fill-color: #1967D2;\n",
              "      --hover-bg-color: #E2EBFA;\n",
              "      --hover-fill-color: #174EA6;\n",
              "      --disabled-fill-color: #AAA;\n",
              "      --disabled-bg-color: #DDD;\n",
              "  }\n",
              "\n",
              "  [theme=dark] .colab-df-quickchart {\n",
              "      --bg-color: #3B4455;\n",
              "      --fill-color: #D2E3FC;\n",
              "      --hover-bg-color: #434B5C;\n",
              "      --hover-fill-color: #FFFFFF;\n",
              "      --disabled-bg-color: #3B4455;\n",
              "      --disabled-fill-color: #666;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart {\n",
              "    background-color: var(--bg-color);\n",
              "    border: none;\n",
              "    border-radius: 50%;\n",
              "    cursor: pointer;\n",
              "    display: none;\n",
              "    fill: var(--fill-color);\n",
              "    height: 32px;\n",
              "    padding: 0;\n",
              "    width: 32px;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart:hover {\n",
              "    background-color: var(--hover-bg-color);\n",
              "    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "    fill: var(--button-hover-fill-color);\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart-complete:disabled,\n",
              "  .colab-df-quickchart-complete:disabled:hover {\n",
              "    background-color: var(--disabled-bg-color);\n",
              "    fill: var(--disabled-fill-color);\n",
              "    box-shadow: none;\n",
              "  }\n",
              "\n",
              "  .colab-df-spinner {\n",
              "    border: 2px solid var(--fill-color);\n",
              "    border-color: transparent;\n",
              "    border-bottom-color: var(--fill-color);\n",
              "    animation:\n",
              "      spin 1s steps(1) infinite;\n",
              "  }\n",
              "\n",
              "  @keyframes spin {\n",
              "    0% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "      border-left-color: var(--fill-color);\n",
              "    }\n",
              "    20% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    30% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    40% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    60% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    80% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "    90% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "  }\n",
              "</style>\n",
              "\n",
              "  <script>\n",
              "    async function quickchart(key) {\n",
              "      const quickchartButtonEl =\n",
              "        document.querySelector('#' + key + ' button');\n",
              "      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n",
              "      quickchartButtonEl.classList.add('colab-df-spinner');\n",
              "      try {\n",
              "        const charts = await google.colab.kernel.invokeFunction(\n",
              "            'suggestCharts', [key], {});\n",
              "      } catch (error) {\n",
              "        console.error('Error during call to suggestCharts:', error);\n",
              "      }\n",
              "      quickchartButtonEl.classList.remove('colab-df-spinner');\n",
              "      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n",
              "    }\n",
              "    (() => {\n",
              "      let quickchartButtonEl =\n",
              "        document.querySelector('#df-a4686b8f-61a1-4912-8824-5d5847dc274a button');\n",
              "      quickchartButtonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "    })();\n",
              "  </script>\n",
              "</div>\n",
              "    </div>\n",
              "  </div>\n"
            ],
            "application/vnd.google.colaboratory.intrinsic+json": {
              "type": "dataframe",
              "variable_name": "df",
              "summary": "{\n  \"name\": \"df\",\n  \"rows\": 10000,\n  \"fields\": [\n    {\n      \"column\": \"Date\",\n      \"properties\": {\n        \"dtype\": \"date\",\n        \"min\": \"2024-01-01 00:00:00\",\n        \"max\": \"2024-12-30 00:00:00\",\n        \"num_unique_values\": 365,\n        \"samples\": [\n          \"2024-03-15 00:00:00\",\n          \"2024-07-23 00:00:00\",\n          \"2024-01-29 00:00:00\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Time\",\n      \"properties\": {\n        \"dtype\": \"object\",\n        \"num_unique_values\": 1438,\n        \"samples\": [\n          \"06:07 PM\",\n          \"02:08 AM\",\n          \"01:19 PM\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Menu Item\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 10,\n        \"samples\": [\n          \"Lasagna\",\n          \"Caprese Salad\",\n          \"Fettuccine Alfredo\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Category\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 3,\n        \"samples\": [\n          \"Main Course\",\n          \"Appetizer\",\n          \"Dessert\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Quantity\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 1,\n        \"min\": 1,\n        \"max\": 5,\n        \"num_unique_values\": 5,\n        \"samples\": [\n          1,\n          5,\n          2\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Price (per item)\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 2.9628576290523516,\n        \"min\": 4.5,\n        \"max\": 13.0,\n        \"num_unique_values\": 10,\n        \"samples\": [\n          11.5,\n          8.0,\n          13.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Revenue\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 15.344064413602341,\n        \"min\": 4.5,\n        \"max\": 65.0,\n        \"num_unique_values\": 44,\n        \"samples\": [\n          4.5,\n          5.0,\n          32.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Payment Method\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 3,\n        \"samples\": [\n          \"Credit Card\",\n          \"Mobile Payment\",\n          \"Cash\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Customer Type\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 3,\n        \"samples\": [\n          \"Dine-In\",\n          \"Takeaway\",\n          \"Delivery\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Month\",\n      \"properties\": {\n        \"dtype\": \"int32\",\n        \"num_unique_values\": 12,\n        \"samples\": [\n          6,\n          9,\n          11\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"
            }
          },
          "metadata": {},
          "execution_count": 70
        }
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "\n",
        "\n",
        "*   **Перегляд типів даних**\n",
        "\n",
        "\n",
        "\n",
        "\n",
        "\n",
        "\n"
      ],
      "metadata": {
        "id": "4x5d-Rzdljq6"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "df.dtypes"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 366
        },
        "id": "aimOufKClrLd",
        "outputId": "3a09b2b2-ceb6-4859-dbfb-39adb12f2de6"
      },
      "execution_count": 60,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "Date                 object\n",
              "Time                 object\n",
              "Menu Item            object\n",
              "Category             object\n",
              "Quantity              int64\n",
              "Price (per item)    float64\n",
              "Revenue             float64\n",
              "Payment Method       object\n",
              "Customer Type        object\n",
              "dtype: object"
            ],
            "text/html": [
              "<div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>0</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>Date</th>\n",
              "      <td>object</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>Time</th>\n",
              "      <td>object</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>Menu Item</th>\n",
              "      <td>object</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>Category</th>\n",
              "      <td>object</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>Quantity</th>\n",
              "      <td>int64</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>Price (per item)</th>\n",
              "      <td>float64</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>Revenue</th>\n",
              "      <td>float64</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>Payment Method</th>\n",
              "      <td>object</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>Customer Type</th>\n",
              "      <td>object</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div><br><label><b>dtype:</b> object</label>"
            ]
          },
          "metadata": {},
          "execution_count": 60
        }
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "Колонка Date містить тип даних object, який необхідно змінити на тип datetime64[ns]."
      ],
      "metadata": {
        "id": "g7kLIbq208cF"
      }
    },
    {
      "cell_type": "markdown",
      "source": [
        "\n",
        "\n",
        "*   **Зміна типу даних колонки Date**\n",
        "\n",
        "\n"
      ],
      "metadata": {
        "id": "5NUFyODf2ges"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "df['Date'] = pd.to_datetime(df['Date'])"
      ],
      "metadata": {
        "id": "RNHukknh2sAH"
      },
      "execution_count": 64,
      "outputs": []
    },
    {
      "cell_type": "markdown",
      "source": [
        "\n",
        "\n",
        "\n",
        "\n",
        "*   **Перевірка типу даних колонки Date**\n",
        "\n",
        "\n",
        "\n",
        "\n",
        "\n"
      ],
      "metadata": {
        "id": "gA4HzjAT20zH"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "print(df['Date'].dtype)"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "lG4PYJ8p3Nau",
        "outputId": "105f2a2a-c6b5-467a-de74-d47a2e619e6c"
      },
      "execution_count": 65,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "datetime64[ns]\n"
          ]
        }
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "\n",
        "\n",
        "*   **Перевірка на пропущені значення**\n",
        "\n",
        "\n"
      ],
      "metadata": {
        "id": "WalaQtKGmv7Q"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "df.isna().sum()"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 366
        },
        "id": "ZK4S2jg51nyC",
        "outputId": "bf277532-ac3f-4448-cee5-86edd9768c53"
      },
      "execution_count": 66,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "Date                0\n",
              "Time                0\n",
              "Menu Item           0\n",
              "Category            0\n",
              "Quantity            0\n",
              "Price (per item)    0\n",
              "Revenue             0\n",
              "Payment Method      0\n",
              "Customer Type       0\n",
              "dtype: int64"
            ],
            "text/html": [
              "<div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>0</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>Date</th>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>Time</th>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>Menu Item</th>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>Category</th>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>Quantity</th>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>Price (per item)</th>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>Revenue</th>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>Payment Method</th>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>Customer Type</th>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div><br><label><b>dtype:</b> int64</label>"
            ]
          },
          "metadata": {},
          "execution_count": 66
        }
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "Пропущені значення відсутні."
      ],
      "metadata": {
        "id": "wIpYIum919bJ"
      }
    },
    {
      "cell_type": "markdown",
      "source": [
        "\n",
        "\n",
        "*   **Перевірка на дублі**\n",
        "\n",
        "\n"
      ],
      "metadata": {
        "id": "nWgJxXsvq8Mw"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "df[df.duplicated()]"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 53
        },
        "id": "Qzl0h9HQm8db",
        "outputId": "77f3cd73-0800-4950-92c4-dcc37f10c4de"
      },
      "execution_count": 21,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "Empty DataFrame\n",
              "Columns: [Date, Time, Menu Item, Category, Quantity, Price (per item), Revenue, Payment Method, Customer Type]\n",
              "Index: []"
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-b388cebb-4ea1-4e43-9c5d-ca8731eac9c4\" class=\"colab-df-container\">\n",
              "    <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>Date</th>\n",
              "      <th>Time</th>\n",
              "      <th>Menu Item</th>\n",
              "      <th>Category</th>\n",
              "      <th>Quantity</th>\n",
              "      <th>Price (per item)</th>\n",
              "      <th>Revenue</th>\n",
              "      <th>Payment Method</th>\n",
              "      <th>Customer Type</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>\n",
              "    <div class=\"colab-df-buttons\">\n",
              "\n",
              "  <div class=\"colab-df-container\">\n",
              "    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-b388cebb-4ea1-4e43-9c5d-ca8731eac9c4')\"\n",
              "            title=\"Convert this dataframe to an interactive table.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n",
              "    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n",
              "  </svg>\n",
              "    </button>\n",
              "\n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    .colab-df-buttons div {\n",
              "      margin-bottom: 4px;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "    <script>\n",
              "      const buttonEl =\n",
              "        document.querySelector('#df-b388cebb-4ea1-4e43-9c5d-ca8731eac9c4 button.colab-df-convert');\n",
              "      buttonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "      async function convertToInteractive(key) {\n",
              "        const element = document.querySelector('#df-b388cebb-4ea1-4e43-9c5d-ca8731eac9c4');\n",
              "        const dataTable =\n",
              "          await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                    [key], {});\n",
              "        if (!dataTable) return;\n",
              "\n",
              "        const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "          + ' to learn more about interactive tables.';\n",
              "        element.innerHTML = '';\n",
              "        dataTable['output_type'] = 'display_data';\n",
              "        await google.colab.output.renderOutput(dataTable, element);\n",
              "        const docLink = document.createElement('div');\n",
              "        docLink.innerHTML = docLinkHtml;\n",
              "        element.appendChild(docLink);\n",
              "      }\n",
              "    </script>\n",
              "  </div>\n",
              "\n",
              "    </div>\n",
              "  </div>\n"
            ],
            "application/vnd.google.colaboratory.intrinsic+json": {
              "type": "dataframe",
              "repr_error": "Out of range float values are not JSON compliant: nan"
            }
          },
          "metadata": {},
          "execution_count": 21
        }
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "Дублі в наборі даних відсутні."
      ],
      "metadata": {
        "id": "DCv80B_I2hHH"
      }
    },
    {
      "cell_type": "markdown",
      "source": [
        "\n",
        "\n",
        "*   **Відокремлення місяця із колонки Date**\n",
        "\n",
        "\n"
      ],
      "metadata": {
        "id": "nROdUsxz3qhx"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "df['Month'] = df['Date'].dt.month"
      ],
      "metadata": {
        "id": "2VwABq1R5S-x"
      },
      "execution_count": 67,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "df[:3]"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 144
        },
        "id": "wpOYLn_A5ZW0",
        "outputId": "79dfd3b5-8fc9-4632-80ed-61a1c1fd8a64"
      },
      "execution_count": 69,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "        Date      Time         Menu Item     Category  Quantity  \\\n",
              "0 2024-11-23  03:48 AM  Margherita Pizza  Main Course         3   \n",
              "1 2024-03-12  03:29 AM     Caprese Salad    Appetizer         1   \n",
              "2 2024-01-17  01:01 AM          Tiramisu      Dessert         2   \n",
              "\n",
              "   Price (per item)  Revenue  Payment Method Customer Type  Month  \n",
              "0              10.0     30.0     Credit Card       Dine-In     11  \n",
              "1               8.0      8.0  Mobile Payment      Takeaway      3  \n",
              "2               6.5     13.0     Credit Card      Delivery      1  "
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-aaa53d51-2de3-4081-bb59-7aeb6975fce9\" class=\"colab-df-container\">\n",
              "    <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>Date</th>\n",
              "      <th>Time</th>\n",
              "      <th>Menu Item</th>\n",
              "      <th>Category</th>\n",
              "      <th>Quantity</th>\n",
              "      <th>Price (per item)</th>\n",
              "      <th>Revenue</th>\n",
              "      <th>Payment Method</th>\n",
              "      <th>Customer Type</th>\n",
              "      <th>Month</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>2024-11-23</td>\n",
              "      <td>03:48 AM</td>\n",
              "      <td>Margherita Pizza</td>\n",
              "      <td>Main Course</td>\n",
              "      <td>3</td>\n",
              "      <td>10.0</td>\n",
              "      <td>30.0</td>\n",
              "      <td>Credit Card</td>\n",
              "      <td>Dine-In</td>\n",
              "      <td>11</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>2024-03-12</td>\n",
              "      <td>03:29 AM</td>\n",
              "      <td>Caprese Salad</td>\n",
              "      <td>Appetizer</td>\n",
              "      <td>1</td>\n",
              "      <td>8.0</td>\n",
              "      <td>8.0</td>\n",
              "      <td>Mobile Payment</td>\n",
              "      <td>Takeaway</td>\n",
              "      <td>3</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>2024-01-17</td>\n",
              "      <td>01:01 AM</td>\n",
              "      <td>Tiramisu</td>\n",
              "      <td>Dessert</td>\n",
              "      <td>2</td>\n",
              "      <td>6.5</td>\n",
              "      <td>13.0</td>\n",
              "      <td>Credit Card</td>\n",
              "      <td>Delivery</td>\n",
              "      <td>1</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>\n",
              "    <div class=\"colab-df-buttons\">\n",
              "\n",
              "  <div class=\"colab-df-container\">\n",
              "    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-aaa53d51-2de3-4081-bb59-7aeb6975fce9')\"\n",
              "            title=\"Convert this dataframe to an interactive table.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n",
              "    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n",
              "  </svg>\n",
              "    </button>\n",
              "\n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    .colab-df-buttons div {\n",
              "      margin-bottom: 4px;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "    <script>\n",
              "      const buttonEl =\n",
              "        document.querySelector('#df-aaa53d51-2de3-4081-bb59-7aeb6975fce9 button.colab-df-convert');\n",
              "      buttonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "      async function convertToInteractive(key) {\n",
              "        const element = document.querySelector('#df-aaa53d51-2de3-4081-bb59-7aeb6975fce9');\n",
              "        const dataTable =\n",
              "          await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                    [key], {});\n",
              "        if (!dataTable) return;\n",
              "\n",
              "        const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "          + ' to learn more about interactive tables.';\n",
              "        element.innerHTML = '';\n",
              "        dataTable['output_type'] = 'display_data';\n",
              "        await google.colab.output.renderOutput(dataTable, element);\n",
              "        const docLink = document.createElement('div');\n",
              "        docLink.innerHTML = docLinkHtml;\n",
              "        element.appendChild(docLink);\n",
              "      }\n",
              "    </script>\n",
              "  </div>\n",
              "\n",
              "\n",
              "<div id=\"df-55d8fe08-9884-4051-badd-614554d8cc73\">\n",
              "  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-55d8fe08-9884-4051-badd-614554d8cc73')\"\n",
              "            title=\"Suggest charts\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "     width=\"24px\">\n",
              "    <g>\n",
              "        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n",
              "    </g>\n",
              "</svg>\n",
              "  </button>\n",
              "\n",
              "<style>\n",
              "  .colab-df-quickchart {\n",
              "      --bg-color: #E8F0FE;\n",
              "      --fill-color: #1967D2;\n",
              "      --hover-bg-color: #E2EBFA;\n",
              "      --hover-fill-color: #174EA6;\n",
              "      --disabled-fill-color: #AAA;\n",
              "      --disabled-bg-color: #DDD;\n",
              "  }\n",
              "\n",
              "  [theme=dark] .colab-df-quickchart {\n",
              "      --bg-color: #3B4455;\n",
              "      --fill-color: #D2E3FC;\n",
              "      --hover-bg-color: #434B5C;\n",
              "      --hover-fill-color: #FFFFFF;\n",
              "      --disabled-bg-color: #3B4455;\n",
              "      --disabled-fill-color: #666;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart {\n",
              "    background-color: var(--bg-color);\n",
              "    border: none;\n",
              "    border-radius: 50%;\n",
              "    cursor: pointer;\n",
              "    display: none;\n",
              "    fill: var(--fill-color);\n",
              "    height: 32px;\n",
              "    padding: 0;\n",
              "    width: 32px;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart:hover {\n",
              "    background-color: var(--hover-bg-color);\n",
              "    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "    fill: var(--button-hover-fill-color);\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart-complete:disabled,\n",
              "  .colab-df-quickchart-complete:disabled:hover {\n",
              "    background-color: var(--disabled-bg-color);\n",
              "    fill: var(--disabled-fill-color);\n",
              "    box-shadow: none;\n",
              "  }\n",
              "\n",
              "  .colab-df-spinner {\n",
              "    border: 2px solid var(--fill-color);\n",
              "    border-color: transparent;\n",
              "    border-bottom-color: var(--fill-color);\n",
              "    animation:\n",
              "      spin 1s steps(1) infinite;\n",
              "  }\n",
              "\n",
              "  @keyframes spin {\n",
              "    0% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "      border-left-color: var(--fill-color);\n",
              "    }\n",
              "    20% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    30% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    40% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    60% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    80% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "    90% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "  }\n",
              "</style>\n",
              "\n",
              "  <script>\n",
              "    async function quickchart(key) {\n",
              "      const quickchartButtonEl =\n",
              "        document.querySelector('#' + key + ' button');\n",
              "      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n",
              "      quickchartButtonEl.classList.add('colab-df-spinner');\n",
              "      try {\n",
              "        const charts = await google.colab.kernel.invokeFunction(\n",
              "            'suggestCharts', [key], {});\n",
              "      } catch (error) {\n",
              "        console.error('Error during call to suggestCharts:', error);\n",
              "      }\n",
              "      quickchartButtonEl.classList.remove('colab-df-spinner');\n",
              "      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n",
              "    }\n",
              "    (() => {\n",
              "      let quickchartButtonEl =\n",
              "        document.querySelector('#df-55d8fe08-9884-4051-badd-614554d8cc73 button');\n",
              "      quickchartButtonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "    })();\n",
              "  </script>\n",
              "</div>\n",
              "    </div>\n",
              "  </div>\n"
            ],
            "application/vnd.google.colaboratory.intrinsic+json": {
              "type": "dataframe",
              "summary": "{\n  \"name\": \"df[:3]\",\n  \"rows\": 3,\n  \"fields\": [\n    {\n      \"column\": \"Date\",\n      \"properties\": {\n        \"dtype\": \"date\",\n        \"min\": \"2024-01-17 00:00:00\",\n        \"max\": \"2024-11-23 00:00:00\",\n        \"num_unique_values\": 3,\n        \"samples\": [\n          \"2024-11-23 00:00:00\",\n          \"2024-03-12 00:00:00\",\n          \"2024-01-17 00:00:00\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Time\",\n      \"properties\": {\n        \"dtype\": \"object\",\n        \"num_unique_values\": 3,\n        \"samples\": [\n          \"03:48 AM\",\n          \"03:29 AM\",\n          \"01:01 AM\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Menu Item\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 3,\n        \"samples\": [\n          \"Margherita Pizza\",\n          \"Caprese Salad\",\n          \"Tiramisu\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Category\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 3,\n        \"samples\": [\n          \"Main Course\",\n          \"Appetizer\",\n          \"Dessert\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Quantity\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 1,\n        \"min\": 1,\n        \"max\": 3,\n        \"num_unique_values\": 3,\n        \"samples\": [\n          3,\n          1,\n          2\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Price (per item)\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 1.7559422921421233,\n        \"min\": 6.5,\n        \"max\": 10.0,\n        \"num_unique_values\": 3,\n        \"samples\": [\n          10.0,\n          8.0,\n          6.5\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Revenue\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 11.532562594670797,\n        \"min\": 8.0,\n        \"max\": 30.0,\n        \"num_unique_values\": 3,\n        \"samples\": [\n          30.0,\n          8.0,\n          13.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Payment Method\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 2,\n        \"samples\": [\n          \"Mobile Payment\",\n          \"Credit Card\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Customer Type\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 3,\n        \"samples\": [\n          \"Dine-In\",\n          \"Takeaway\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Month\",\n      \"properties\": {\n        \"dtype\": \"int32\",\n        \"num_unique_values\": 3,\n        \"samples\": [\n          11,\n          3\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"
            }
          },
          "metadata": {},
          "execution_count": 69
        }
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "**Питання 1. Яка категорія меню приносить найбільшу виручку?**"
      ],
      "metadata": {
        "id": "TlU4T8OiI8Wk"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "df.groupby(['Category'])['Revenue'].sum()"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 210
        },
        "id": "mTq3rFfLHpH6",
        "outputId": "fa093a92-f11f-494a-ecdd-4c2e016411f2"
      },
      "execution_count": 36,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "Category\n",
              "Appetizer       57608.0\n",
              "Dessert         50541.0\n",
              "Main Course    139581.5\n",
              "Name: Revenue, dtype: float64"
            ],
            "text/html": [
              "<div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>Revenue</th>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>Category</th>\n",
              "      <th></th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>Appetizer</th>\n",
              "      <td>57608.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>Dessert</th>\n",
              "      <td>50541.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>Main Course</th>\n",
              "      <td>139581.5</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div><br><label><b>dtype:</b> float64</label>"
            ]
          },
          "metadata": {},
          "execution_count": 36
        }
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "Найпопулярнішою категорією меню є основне меню, що приносить найбільшу виручку. Необхідно звернути увагу на категорії меню: закуски та десерти.    \n",
        "\n",
        "Рекомендації: звернути увагу на оформлення меню цих категорій, підбір меню під цільову аудиторію, оптимізація цін, акційні пропозиції."
      ],
      "metadata": {
        "id": "-WAiPI3xJUzh"
      }
    },
    {
      "cell_type": "markdown",
      "source": [
        "**Питання 2. Яким стравам відвідувачі надають перевагу?**"
      ],
      "metadata": {
        "id": "a-YPx0onXuNz"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "df.groupby(['Menu Item'])['Quantity'].sum().sort_values(ascending=False)"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 429
        },
        "id": "soM45CwoWCjz",
        "outputId": "65a68a57-fe46-4cc5-e510-501c261f9771"
      },
      "execution_count": 71,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "Menu Item\n",
              "Tiramisu               3148\n",
              "Fettuccine Alfredo     3089\n",
              "Panna Cotta            3016\n",
              "Lasagna                2999\n",
              "Gelato                 2998\n",
              "Minestrone Soup        2990\n",
              "Spaghetti Carbonara    2983\n",
              "Margherita Pizza       2914\n",
              "Bruschetta             2822\n",
              "Caprese Salad          2821\n",
              "Name: Quantity, dtype: int64"
            ],
            "text/html": [
              "<div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>Quantity</th>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>Menu Item</th>\n",
              "      <th></th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>Tiramisu</th>\n",
              "      <td>3148</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>Fettuccine Alfredo</th>\n",
              "      <td>3089</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>Panna Cotta</th>\n",
              "      <td>3016</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>Lasagna</th>\n",
              "      <td>2999</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>Gelato</th>\n",
              "      <td>2998</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>Minestrone Soup</th>\n",
              "      <td>2990</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>Spaghetti Carbonara</th>\n",
              "      <td>2983</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>Margherita Pizza</th>\n",
              "      <td>2914</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>Bruschetta</th>\n",
              "      <td>2822</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>Caprese Salad</th>\n",
              "      <td>2821</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div><br><label><b>dtype:</b> int64</label>"
            ]
          },
          "metadata": {},
          "execution_count": 71
        }
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "Найбільш привабливими стравами для відвідувачів є Tiramisu, Fettuccine Alfredo, Panna Cotta.\n",
        "Відповідно найменш привабливими для відвідувачів є Bruschetta та Caprese Salad.\n",
        "\n",
        "Рекомендація: зробити опитування відвідувачів, які замовили ці страви, та спитати, щоб вони додали до цих страв або що їм в них не вистачало. Зміна рецептури цих страв.\n",
        "\n"
      ],
      "metadata": {
        "id": "vyfifBFiWvrn"
      }
    },
    {
      "cell_type": "markdown",
      "source": [
        "**Питання 3. Динаміка доходу по місяцям по категоріям меню.**"
      ],
      "metadata": {
        "id": "QTnLnR0UMmXK"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "revenue_pivot = df.pivot_table(index = 'Month', columns = 'Category', values = 'Revenue', aggfunc = 'sum').round(2)"
      ],
      "metadata": {
        "id": "v2r7CIixKcXU"
      },
      "execution_count": 78,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "revenue_pivot\n",
        "display(revenue_pivot.style.format(\"{:.2f}\").background_gradient(low=0.75, high=1.0))"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 457
        },
        "id": "W2TO_BNOK0L-",
        "outputId": "af2bdda8-4dc8-41e7-86ee-46ae1bb9f920"
      },
      "execution_count": 82,
      "outputs": [
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<pandas.io.formats.style.Styler at 0x7d75c4610550>"
            ],
            "text/html": [
              "<style type=\"text/css\">\n",
              "#T_3cce0_row0_col0, #T_3cce0_row1_col1, #T_3cce0_row5_col2 {\n",
              "  background-color: #c9cee4;\n",
              "  color: #000000;\n",
              "}\n",
              "#T_3cce0_row0_col1, #T_3cce0_row2_col0 {\n",
              "  background-color: #4094c3;\n",
              "  color: #f1f1f1;\n",
              "}\n",
              "#T_3cce0_row0_col2 {\n",
              "  background-color: #94b6d7;\n",
              "  color: #000000;\n",
              "}\n",
              "#T_3cce0_row1_col0 {\n",
              "  background-color: #76aad0;\n",
              "  color: #f1f1f1;\n",
              "}\n",
              "#T_3cce0_row1_col2 {\n",
              "  background-color: #a5bddb;\n",
              "  color: #000000;\n",
              "}\n",
              "#T_3cce0_row2_col1, #T_3cce0_row9_col2, #T_3cce0_row10_col2 {\n",
              "  background-color: #7eadd1;\n",
              "  color: #f1f1f1;\n",
              "}\n",
              "#T_3cce0_row2_col2, #T_3cce0_row6_col2 {\n",
              "  background-color: #84b0d3;\n",
              "  color: #f1f1f1;\n",
              "}\n",
              "#T_3cce0_row3_col0 {\n",
              "  background-color: #4496c3;\n",
              "  color: #f1f1f1;\n",
              "}\n",
              "#T_3cce0_row3_col1 {\n",
              "  background-color: #6ba5cd;\n",
              "  color: #f1f1f1;\n",
              "}\n",
              "#T_3cce0_row3_col2 {\n",
              "  background-color: #9ebad9;\n",
              "  color: #000000;\n",
              "}\n",
              "#T_3cce0_row4_col0 {\n",
              "  background-color: #69a5cc;\n",
              "  color: #f1f1f1;\n",
              "}\n",
              "#T_3cce0_row4_col1 {\n",
              "  background-color: #91b5d6;\n",
              "  color: #000000;\n",
              "}\n",
              "#T_3cce0_row4_col2, #T_3cce0_row7_col1 {\n",
              "  background-color: #89b1d4;\n",
              "  color: #000000;\n",
              "}\n",
              "#T_3cce0_row5_col0 {\n",
              "  background-color: #589ec8;\n",
              "  color: #f1f1f1;\n",
              "}\n",
              "#T_3cce0_row5_col1, #T_3cce0_row7_col2, #T_3cce0_row9_col0 {\n",
              "  background-color: #328dbf;\n",
              "  color: #f1f1f1;\n",
              "}\n",
              "#T_3cce0_row6_col0 {\n",
              "  background-color: #62a2cb;\n",
              "  color: #f1f1f1;\n",
              "}\n",
              "#T_3cce0_row6_col1 {\n",
              "  background-color: #3d93c2;\n",
              "  color: #f1f1f1;\n",
              "}\n",
              "#T_3cce0_row7_col0, #T_3cce0_row9_col1, #T_3cce0_row10_col1 {\n",
              "  background-color: #8cb3d5;\n",
              "  color: #000000;\n",
              "}\n",
              "#T_3cce0_row8_col0, #T_3cce0_row8_col1 {\n",
              "  background-color: #4c99c5;\n",
              "  color: #f1f1f1;\n",
              "}\n",
              "#T_3cce0_row8_col2 {\n",
              "  background-color: #a4bcda;\n",
              "  color: #000000;\n",
              "}\n",
              "#T_3cce0_row10_col0 {\n",
              "  background-color: #80aed2;\n",
              "  color: #f1f1f1;\n",
              "}\n",
              "#T_3cce0_row11_col0 {\n",
              "  background-color: #3b92c1;\n",
              "  color: #f1f1f1;\n",
              "}\n",
              "#T_3cce0_row11_col1 {\n",
              "  background-color: #a8bedc;\n",
              "  color: #000000;\n",
              "}\n",
              "#T_3cce0_row11_col2 {\n",
              "  background-color: #96b6d7;\n",
              "  color: #000000;\n",
              "}\n",
              "</style>\n",
              "<table id=\"T_3cce0\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr>\n",
              "      <th class=\"index_name level0\" >Category</th>\n",
              "      <th id=\"T_3cce0_level0_col0\" class=\"col_heading level0 col0\" >Appetizer</th>\n",
              "      <th id=\"T_3cce0_level0_col1\" class=\"col_heading level0 col1\" >Dessert</th>\n",
              "      <th id=\"T_3cce0_level0_col2\" class=\"col_heading level0 col2\" >Main Course</th>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th class=\"index_name level0\" >Month</th>\n",
              "      <th class=\"blank col0\" >&nbsp;</th>\n",
              "      <th class=\"blank col1\" >&nbsp;</th>\n",
              "      <th class=\"blank col2\" >&nbsp;</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th id=\"T_3cce0_level0_row0\" class=\"row_heading level0 row0\" >1</th>\n",
              "      <td id=\"T_3cce0_row0_col0\" class=\"data row0 col0\" >3873.00</td>\n",
              "      <td id=\"T_3cce0_row0_col1\" class=\"data row0 col1\" >4570.50</td>\n",
              "      <td id=\"T_3cce0_row0_col2\" class=\"data row0 col2\" >11428.00</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th id=\"T_3cce0_level0_row1\" class=\"row_heading level0 row1\" >2</th>\n",
              "      <td id=\"T_3cce0_row1_col0\" class=\"data row1 col0\" >4680.00</td>\n",
              "      <td id=\"T_3cce0_row1_col1\" class=\"data row1 col1\" >3568.50</td>\n",
              "      <td id=\"T_3cce0_row1_col2\" class=\"data row1 col2\" >10864.50</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th id=\"T_3cce0_level0_row2\" class=\"row_heading level0 row2\" >3</th>\n",
              "      <td id=\"T_3cce0_row2_col0\" class=\"data row2 col0\" >5081.00</td>\n",
              "      <td id=\"T_3cce0_row2_col1\" class=\"data row2 col1\" >4178.50</td>\n",
              "      <td id=\"T_3cce0_row2_col2\" class=\"data row2 col2\" >11958.00</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th id=\"T_3cce0_level0_row3\" class=\"row_heading level0 row3\" >4</th>\n",
              "      <td id=\"T_3cce0_row3_col0\" class=\"data row3 col0\" >5054.00</td>\n",
              "      <td id=\"T_3cce0_row3_col1\" class=\"data row3 col1\" >4314.00</td>\n",
              "      <td id=\"T_3cce0_row3_col2\" class=\"data row3 col2\" >11153.50</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th id=\"T_3cce0_level0_row4\" class=\"row_heading level0 row4\" >5</th>\n",
              "      <td id=\"T_3cce0_row4_col0\" class=\"data row4 col0\" >4783.00</td>\n",
              "      <td id=\"T_3cce0_row4_col1\" class=\"data row4 col1\" >4040.50</td>\n",
              "      <td id=\"T_3cce0_row4_col2\" class=\"data row4 col2\" >11791.00</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th id=\"T_3cce0_level0_row5\" class=\"row_heading level0 row5\" >6</th>\n",
              "      <td id=\"T_3cce0_row5_col0\" class=\"data row5 col0\" >4908.00</td>\n",
              "      <td id=\"T_3cce0_row5_col1\" class=\"data row5 col1\" >4670.50</td>\n",
              "      <td id=\"T_3cce0_row5_col2\" class=\"data row5 col2\" >9532.00</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th id=\"T_3cce0_level0_row6\" class=\"row_heading level0 row6\" >7</th>\n",
              "      <td id=\"T_3cce0_row6_col0\" class=\"data row6 col0\" >4840.00</td>\n",
              "      <td id=\"T_3cce0_row6_col1\" class=\"data row6 col1\" >4597.00</td>\n",
              "      <td id=\"T_3cce0_row6_col2\" class=\"data row6 col2\" >11973.50</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th id=\"T_3cce0_level0_row7\" class=\"row_heading level0 row7\" >8</th>\n",
              "      <td id=\"T_3cce0_row7_col0\" class=\"data row7 col0\" >4475.00</td>\n",
              "      <td id=\"T_3cce0_row7_col1\" class=\"data row7 col1\" >4098.50</td>\n",
              "      <td id=\"T_3cce0_row7_col2\" class=\"data row7 col2\" >14254.00</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th id=\"T_3cce0_level0_row8\" class=\"row_heading level0 row8\" >9</th>\n",
              "      <td id=\"T_3cce0_row8_col0\" class=\"data row8 col0\" >4994.00</td>\n",
              "      <td id=\"T_3cce0_row8_col1\" class=\"data row8 col1\" >4497.50</td>\n",
              "      <td id=\"T_3cce0_row8_col2\" class=\"data row8 col2\" >10918.00</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th id=\"T_3cce0_level0_row9\" class=\"row_heading level0 row9\" >10</th>\n",
              "      <td id=\"T_3cce0_row9_col0\" class=\"data row9 col0\" >5196.00</td>\n",
              "      <td id=\"T_3cce0_row9_col1\" class=\"data row9 col1\" >4076.00</td>\n",
              "      <td id=\"T_3cce0_row9_col2\" class=\"data row9 col2\" >12176.50</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th id=\"T_3cce0_level0_row10\" class=\"row_heading level0 row10\" >11</th>\n",
              "      <td id=\"T_3cce0_row10_col0\" class=\"data row10 col0\" >4598.00</td>\n",
              "      <td id=\"T_3cce0_row10_col1\" class=\"data row10 col1\" >4073.50</td>\n",
              "      <td id=\"T_3cce0_row10_col2\" class=\"data row10 col2\" >12132.50</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th id=\"T_3cce0_level0_row11\" class=\"row_heading level0 row11\" >12</th>\n",
              "      <td id=\"T_3cce0_row11_col0\" class=\"data row11 col0\" >5126.00</td>\n",
              "      <td id=\"T_3cce0_row11_col1\" class=\"data row11 col1\" >3856.00</td>\n",
              "      <td id=\"T_3cce0_row11_col2\" class=\"data row11 col2\" >11400.00</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n"
            ]
          },
          "metadata": {}
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "revenue_pivot.plot()\n",
        "plt.title('Динаміка доходу по місяцям')\n",
        "plt.xlabel('Month')\n",
        "plt.ylabel('Revenue');"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 472
        },
        "id": "GxXEGcGQK9Dx",
        "outputId": "1026f3b3-a96f-4055-8f96-6a5878a6b077"
      },
      "execution_count": 83,
      "outputs": [
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 640x480 with 1 Axes>"
            ],
            "image/png": "\n"
          },
          "metadata": {}
        }
      ]
    },
    {
      "cell_type": "markdown",
      "source": [],
      "metadata": {
        "id": "X72rqGqjQasY"
      }
    },
    {
      "cell_type": "markdown",
      "source": [
        "**Питання 4. Визначення періодів пікових продажів?**"
      ],
      "metadata": {
        "id": "UHWijxLEUbPA"
      }
    },
    {
      "cell_type": "markdown",
      "source": [
        "\n",
        "\n",
        "*   **Розподіл продажів за годинами**\n",
        "\n",
        "\n"
      ],
      "metadata": {
        "id": "r2kRcKz_QPv5"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "# Перетворення в datetime\n",
        "df['Time'] = pd.to_datetime(df['Time'], format='%I:%M %p')\n",
        "# Виділення лише години\n",
        "df['Hour'] = df['Time'].dt.hour"
      ],
      "metadata": {
        "id": "yFf9rnBVSgZI"
      },
      "execution_count": 84,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "# Підрахунок доходу за годинами\n",
        "hourly_sales = df.groupby('Hour')['Revenue'].sum().reset_index()"
      ],
      "metadata": {
        "id": "VfaZX-H0Sgq_"
      },
      "execution_count": 85,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "plt.figure(figsize=(10,5))\n",
        "sns.barplot(data=hourly_sales, x='Hour', y='Revenue', color='skyblue')\n",
        "plt.xlabel(\"Hour\")\n",
        "plt.ylabel(\"Revenue\")\n",
        "plt.title(\"Розподіл продажів за годинами\")\n",
        "plt.show()"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 487
        },
        "id": "iE6Ly1tUThso",
        "outputId": "d9f98e44-2915-4b70-ce71-0463a0fac042"
      },
      "execution_count": 87,
      "outputs": [
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 1000x500 with 1 Axes>"
            ],
            "image/png": "\n"
          },
          "metadata": {}
        }
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "Замовлення розподілені рівномірно протягом доби. Це може означати, що кафе працює цілодобово або має постійний потік клієнтів. Найбільше замовлень о 8:00, 16:00 та 22:00.\n",
        "\n",
        "О 8:00 – можливий сніданковий пік (люди приходять за кавою та сніданком).\n",
        "\n",
        "О 16:00 – підйом може свідчити про вечірній чай/каву або перекуси після роботи.\n",
        "\n",
        "О 22:00 – активність може бути пов’язана з вечірніми зустрічами або пізніми перекусами.\n",
        "\n",
        "Немає сильної різниці між денними та нічними годинами.\n",
        "Це незвично, оскільки в більшості кафе нічні години мають значно менше замовлень.\n",
        "Можливо, це кафе в туристичному районі або місце, популярне серед людей, які працюють у нічну зміну."
      ],
      "metadata": {
        "id": "3unA8aieVLtY"
      }
    },
    {
      "cell_type": "markdown",
      "source": [
        "\n",
        "\n",
        "*   **Розподіл продажів за днями тижня**\n",
        "\n",
        "\n"
      ],
      "metadata": {
        "id": "jitY7ApJTKgL"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "# додаємо колонку з днем тижня\n",
        "df['Date'] = pd.to_datetime(df['Date'])\n",
        "df['Weekday'] = df['Date'].dt.day_name()"
      ],
      "metadata": {
        "id": "tnPzq31uTDtv"
      },
      "execution_count": 88,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "# Підрахунок доходу за днями тижня\n",
        "weekday_sales = df.groupby('Weekday')['Revenue'].sum().reset_index()\n",
        "sns.barplot(data=weekday_sales, x='Weekday', y='Revenue', color='skyblue')\n",
        "plt.title(\"Дохід по днях тижня\")\n",
        "plt.show()"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 472
        },
        "id": "T0_mI5WIT8Ss",
        "outputId": "5db777af-6e8c-4db3-f5f5-14ad1815f9f3"
      },
      "execution_count": 93,
      "outputs": [
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 640x480 with 1 Axes>"
            ],
            "image/png": "\n"
          },
          "metadata": {}
        }
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "Замовлення розподілені рівномірно протягом тижня"
      ],
      "metadata": {
        "id": "nR2K5gS7Ut0v"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "pivot = df.pivot_table(index=['Payment Method'],  columns=['Hour'] , values=['Quantity'], aggfunc='sum')\n",
        "display(pivot.style.background_gradient(axis=None, cmap='YlOrRd'))"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 206
        },
        "id": "yaLUbm_Q8mFA",
        "outputId": "e3c7f234-fe55-4eee-f010-60c2d2f0d9dc"
      },
      "execution_count": 30,
      "outputs": [
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<pandas.io.formats.style.Styler at 0x7d75d2b3d810>"
            ],
            "text/html": [
              "<style type=\"text/css\">\n",
              "#T_d9f22_row0_col0 {\n",
              "  background-color: #b90026;\n",
              "  color: #f1f1f1;\n",
              "}\n",
              "#T_d9f22_row0_col1 {\n",
              "  background-color: #fd913e;\n",
              "  color: #000000;\n",
              "}\n",
              "#T_d9f22_row0_col2 {\n",
              "  background-color: #fd7435;\n",
              "  color: #f1f1f1;\n",
              "}\n",
              "#T_d9f22_row0_col3 {\n",
              "  background-color: #feb04b;\n",
              "  color: #000000;\n",
              "}\n",
              "#T_d9f22_row0_col4, #T_d9f22_row2_col8 {\n",
              "  background-color: #f23924;\n",
              "  color: #f1f1f1;\n",
              "}\n",
              "#T_d9f22_row0_col5 {\n",
              "  background-color: #ffec9d;\n",
              "  color: #000000;\n",
              "}\n",
              "#T_d9f22_row0_col6, #T_d9f22_row1_col15 {\n",
              "  background-color: #fd9d43;\n",
              "  color: #000000;\n",
              "}\n",
              "#T_d9f22_row0_col7 {\n",
              "  background-color: #fc552c;\n",
              "  color: #f1f1f1;\n",
              "}\n",
              "#T_d9f22_row0_col8 {\n",
              "  background-color: #ca0923;\n",
              "  color: #f1f1f1;\n",
              "}\n",
              "#T_d9f22_row0_col9 {\n",
              "  background-color: #fecb67;\n",
              "  color: #000000;\n",
              "}\n",
              "#T_d9f22_row0_col10 {\n",
              "  background-color: #e8241f;\n",
              "  color: #f1f1f1;\n",
              "}\n",
              "#T_d9f22_row0_col11, #T_d9f22_row2_col16 {\n",
              "  background-color: #fd7e38;\n",
              "  color: #f1f1f1;\n",
              "}\n",
              "#T_d9f22_row0_col12 {\n",
              "  background-color: #d7121f;\n",
              "  color: #f1f1f1;\n",
              "}\n",
              "#T_d9f22_row0_col13 {\n",
              "  background-color: #fd9941;\n",
              "  color: #000000;\n",
              "}\n",
              "#T_d9f22_row0_col14, #T_d9f22_row1_col3 {\n",
              "  background-color: #feab49;\n",
              "  color: #000000;\n",
              "}\n",
              "#T_d9f22_row0_col15 {\n",
              "  background-color: #ce0c22;\n",
              "  color: #f1f1f1;\n",
              "}\n",
              "#T_d9f22_row0_col16 {\n",
              "  background-color: #db141e;\n",
              "  color: #f1f1f1;\n",
              "}\n",
              "#T_d9f22_row0_col17 {\n",
              "  background-color: #d41020;\n",
              "  color: #f1f1f1;\n",
              "}\n",
              "#T_d9f22_row0_col18 {\n",
              "  background-color: #e31a1c;\n",
              "  color: #f1f1f1;\n",
              "}\n",
              "#T_d9f22_row0_col19 {\n",
              "  background-color: #febe59;\n",
              "  color: #000000;\n",
              "}\n",
              "#T_d9f22_row0_col20 {\n",
              "  background-color: #dd161d;\n",
              "  color: #f1f1f1;\n",
              "}\n",
              "#T_d9f22_row0_col21 {\n",
              "  background-color: #fc592d;\n",
              "  color: #f1f1f1;\n",
              "}\n",
              "#T_d9f22_row0_col22 {\n",
              "  background-color: #e2191c;\n",
              "  color: #f1f1f1;\n",
              "}\n",
              "#T_d9f22_row0_col23, #T_d9f22_row1_col14 {\n",
              "  background-color: #f54026;\n",
              "  color: #f1f1f1;\n",
              "}\n",
              "#T_d9f22_row1_col0 {\n",
              "  background-color: #fea245;\n",
              "  color: #000000;\n",
              "}\n",
              "#T_d9f22_row1_col1, #T_d9f22_row1_col10 {\n",
              "  background-color: #fc5b2e;\n",
              "  color: #f1f1f1;\n",
              "}\n",
              "#T_d9f22_row1_col2, #T_d9f22_row2_col5 {\n",
              "  background-color: #feb24c;\n",
              "  color: #000000;\n",
              "}\n",
              "#T_d9f22_row1_col4 {\n",
              "  background-color: #feb651;\n",
              "  color: #000000;\n",
              "}\n",
              "#T_d9f22_row1_col5 {\n",
              "  background-color: #ed3022;\n",
              "  color: #f1f1f1;\n",
              "}\n",
              "#T_d9f22_row1_col6 {\n",
              "  background-color: #fec965;\n",
              "  color: #000000;\n",
              "}\n",
              "#T_d9f22_row1_col7 {\n",
              "  background-color: #e92720;\n",
              "  color: #f1f1f1;\n",
              "}\n",
              "#T_d9f22_row1_col8, #T_d9f22_row1_col12 {\n",
              "  background-color: #fc572c;\n",
              "  color: #f1f1f1;\n",
              "}\n",
              "#T_d9f22_row1_col9 {\n",
              "  background-color: #fea446;\n",
              "  color: #000000;\n",
              "}\n",
              "#T_d9f22_row1_col11, #T_d9f22_row2_col12 {\n",
              "  background-color: #fea848;\n",
              "  color: #000000;\n",
              "}\n",
              "#T_d9f22_row1_col13 {\n",
              "  background-color: #fd933f;\n",
              "  color: #000000;\n",
              "}\n",
              "#T_d9f22_row1_col16 {\n",
              "  background-color: #c80723;\n",
              "  color: #f1f1f1;\n",
              "}\n",
              "#T_d9f22_row1_col17 {\n",
              "  background-color: #fec45f;\n",
              "  color: #000000;\n",
              "}\n",
              "#T_d9f22_row1_col18 {\n",
              "  background-color: #fed470;\n",
              "  color: #000000;\n",
              "}\n",
              "#T_d9f22_row1_col19 {\n",
              "  background-color: #e0181d;\n",
              "  color: #f1f1f1;\n",
              "}\n",
              "#T_d9f22_row1_col20, #T_d9f22_row1_col21 {\n",
              "  background-color: #fc512b;\n",
              "  color: #f1f1f1;\n",
              "}\n",
              "#T_d9f22_row1_col22 {\n",
              "  background-color: #fa4a29;\n",
              "  color: #f1f1f1;\n",
              "}\n",
              "#T_d9f22_row1_col23 {\n",
              "  background-color: #ea2920;\n",
              "  color: #f1f1f1;\n",
              "}\n",
              "#T_d9f22_row2_col0 {\n",
              "  background-color: #fc6631;\n",
              "  color: #f1f1f1;\n",
              "}\n",
              "#T_d9f22_row2_col1 {\n",
              "  background-color: #fd8e3c;\n",
              "  color: #f1f1f1;\n",
              "}\n",
              "#T_d9f22_row2_col2, #T_d9f22_row2_col19 {\n",
              "  background-color: #fd9c42;\n",
              "  color: #000000;\n",
              "}\n",
              "#T_d9f22_row2_col3 {\n",
              "  background-color: #febd57;\n",
              "  color: #000000;\n",
              "}\n",
              "#T_d9f22_row2_col4 {\n",
              "  background-color: #fc5f2f;\n",
              "  color: #f1f1f1;\n",
              "}\n",
              "#T_d9f22_row2_col6 {\n",
              "  background-color: #fc6c33;\n",
              "  color: #f1f1f1;\n",
              "}\n",
              "#T_d9f22_row2_col7 {\n",
              "  background-color: #ffffcc;\n",
              "  color: #000000;\n",
              "}\n",
              "#T_d9f22_row2_col9 {\n",
              "  background-color: #e7231e;\n",
              "  color: #f1f1f1;\n",
              "}\n",
              "#T_d9f22_row2_col10 {\n",
              "  background-color: #feb953;\n",
              "  color: #000000;\n",
              "}\n",
              "#T_d9f22_row2_col11 {\n",
              "  background-color: #800026;\n",
              "  color: #f1f1f1;\n",
              "}\n",
              "#T_d9f22_row2_col13 {\n",
              "  background-color: #e41c1d;\n",
              "  color: #f1f1f1;\n",
              "}\n",
              "#T_d9f22_row2_col14 {\n",
              "  background-color: #cf0c21;\n",
              "  color: #f1f1f1;\n",
              "}\n",
              "#T_d9f22_row2_col15 {\n",
              "  background-color: #ee3122;\n",
              "  color: #f1f1f1;\n",
              "}\n",
              "#T_d9f22_row2_col17, #T_d9f22_row2_col23 {\n",
              "  background-color: #fd8439;\n",
              "  color: #f1f1f1;\n",
              "}\n",
              "#T_d9f22_row2_col18, #T_d9f22_row2_col20 {\n",
              "  background-color: #f94828;\n",
              "  color: #f1f1f1;\n",
              "}\n",
              "#T_d9f22_row2_col21 {\n",
              "  background-color: #fc4d2a;\n",
              "  color: #f1f1f1;\n",
              "}\n",
              "#T_d9f22_row2_col22 {\n",
              "  background-color: #f13624;\n",
              "  color: #f1f1f1;\n",
              "}\n",
              "</style>\n",
              "<table id=\"T_d9f22\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr>\n",
              "      <th class=\"blank level0\" >&nbsp;</th>\n",
              "      <th id=\"T_d9f22_level0_col0\" class=\"col_heading level0 col0\" colspan=\"24\">Quantity</th>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th class=\"index_name level1\" >Hour</th>\n",
              "      <th id=\"T_d9f22_level1_col0\" class=\"col_heading level1 col0\" >0</th>\n",
              "      <th id=\"T_d9f22_level1_col1\" class=\"col_heading level1 col1\" >1</th>\n",
              "      <th id=\"T_d9f22_level1_col2\" class=\"col_heading level1 col2\" >2</th>\n",
              "      <th id=\"T_d9f22_level1_col3\" class=\"col_heading level1 col3\" >3</th>\n",
              "      <th id=\"T_d9f22_level1_col4\" class=\"col_heading level1 col4\" >4</th>\n",
              "      <th id=\"T_d9f22_level1_col5\" class=\"col_heading level1 col5\" >5</th>\n",
              "      <th id=\"T_d9f22_level1_col6\" class=\"col_heading level1 col6\" >6</th>\n",
              "      <th id=\"T_d9f22_level1_col7\" class=\"col_heading level1 col7\" >7</th>\n",
              "      <th id=\"T_d9f22_level1_col8\" class=\"col_heading level1 col8\" >8</th>\n",
              "      <th id=\"T_d9f22_level1_col9\" class=\"col_heading level1 col9\" >9</th>\n",
              "      <th id=\"T_d9f22_level1_col10\" class=\"col_heading level1 col10\" >10</th>\n",
              "      <th id=\"T_d9f22_level1_col11\" class=\"col_heading level1 col11\" >11</th>\n",
              "      <th id=\"T_d9f22_level1_col12\" class=\"col_heading level1 col12\" >12</th>\n",
              "      <th id=\"T_d9f22_level1_col13\" class=\"col_heading level1 col13\" >13</th>\n",
              "      <th id=\"T_d9f22_level1_col14\" class=\"col_heading level1 col14\" >14</th>\n",
              "      <th id=\"T_d9f22_level1_col15\" class=\"col_heading level1 col15\" >15</th>\n",
              "      <th id=\"T_d9f22_level1_col16\" class=\"col_heading level1 col16\" >16</th>\n",
              "      <th id=\"T_d9f22_level1_col17\" class=\"col_heading level1 col17\" >17</th>\n",
              "      <th id=\"T_d9f22_level1_col18\" class=\"col_heading level1 col18\" >18</th>\n",
              "      <th id=\"T_d9f22_level1_col19\" class=\"col_heading level1 col19\" >19</th>\n",
              "      <th id=\"T_d9f22_level1_col20\" class=\"col_heading level1 col20\" >20</th>\n",
              "      <th id=\"T_d9f22_level1_col21\" class=\"col_heading level1 col21\" >21</th>\n",
              "      <th id=\"T_d9f22_level1_col22\" class=\"col_heading level1 col22\" >22</th>\n",
              "      <th id=\"T_d9f22_level1_col23\" class=\"col_heading level1 col23\" >23</th>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th class=\"index_name level0\" >Payment Method</th>\n",
              "      <th class=\"blank col0\" >&nbsp;</th>\n",
              "      <th class=\"blank col1\" >&nbsp;</th>\n",
              "      <th class=\"blank col2\" >&nbsp;</th>\n",
              "      <th class=\"blank col3\" >&nbsp;</th>\n",
              "      <th class=\"blank col4\" >&nbsp;</th>\n",
              "      <th class=\"blank col5\" >&nbsp;</th>\n",
              "      <th class=\"blank col6\" >&nbsp;</th>\n",
              "      <th class=\"blank col7\" >&nbsp;</th>\n",
              "      <th class=\"blank col8\" >&nbsp;</th>\n",
              "      <th class=\"blank col9\" >&nbsp;</th>\n",
              "      <th class=\"blank col10\" >&nbsp;</th>\n",
              "      <th class=\"blank col11\" >&nbsp;</th>\n",
              "      <th class=\"blank col12\" >&nbsp;</th>\n",
              "      <th class=\"blank col13\" >&nbsp;</th>\n",
              "      <th class=\"blank col14\" >&nbsp;</th>\n",
              "      <th class=\"blank col15\" >&nbsp;</th>\n",
              "      <th class=\"blank col16\" >&nbsp;</th>\n",
              "      <th class=\"blank col17\" >&nbsp;</th>\n",
              "      <th class=\"blank col18\" >&nbsp;</th>\n",
              "      <th class=\"blank col19\" >&nbsp;</th>\n",
              "      <th class=\"blank col20\" >&nbsp;</th>\n",
              "      <th class=\"blank col21\" >&nbsp;</th>\n",
              "      <th class=\"blank col22\" >&nbsp;</th>\n",
              "      <th class=\"blank col23\" >&nbsp;</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th id=\"T_d9f22_level0_row0\" class=\"row_heading level0 row0\" >Cash</th>\n",
              "      <td id=\"T_d9f22_row0_col0\" class=\"data row0 col0\" >476</td>\n",
              "      <td id=\"T_d9f22_row0_col1\" class=\"data row0 col1\" >398</td>\n",
              "      <td id=\"T_d9f22_row0_col2\" class=\"data row0 col2\" >410</td>\n",
              "      <td id=\"T_d9f22_row0_col3\" class=\"data row0 col3\" >377</td>\n",
              "      <td id=\"T_d9f22_row0_col4\" class=\"data row0 col4\" >435</td>\n",
              "      <td id=\"T_d9f22_row0_col5\" class=\"data row0 col5\" >328</td>\n",
              "      <td id=\"T_d9f22_row0_col6\" class=\"data row0 col6\" >390</td>\n",
              "      <td id=\"T_d9f22_row0_col7\" class=\"data row0 col7\" >423</td>\n",
              "      <td id=\"T_d9f22_row0_col8\" class=\"data row0 col8\" >466</td>\n",
              "      <td id=\"T_d9f22_row0_col9\" class=\"data row0 col9\" >360</td>\n",
              "      <td id=\"T_d9f22_row0_col10\" class=\"data row0 col10\" >445</td>\n",
              "      <td id=\"T_d9f22_row0_col11\" class=\"data row0 col11\" >406</td>\n",
              "      <td id=\"T_d9f22_row0_col12\" class=\"data row0 col12\" >458</td>\n",
              "      <td id=\"T_d9f22_row0_col13\" class=\"data row0 col13\" >392</td>\n",
              "      <td id=\"T_d9f22_row0_col14\" class=\"data row0 col14\" >381</td>\n",
              "      <td id=\"T_d9f22_row0_col15\" class=\"data row0 col15\" >464</td>\n",
              "      <td id=\"T_d9f22_row0_col16\" class=\"data row0 col16\" >455</td>\n",
              "      <td id=\"T_d9f22_row0_col17\" class=\"data row0 col17\" >460</td>\n",
              "      <td id=\"T_d9f22_row0_col18\" class=\"data row0 col18\" >450</td>\n",
              "      <td id=\"T_d9f22_row0_col19\" class=\"data row0 col19\" >368</td>\n",
              "      <td id=\"T_d9f22_row0_col20\" class=\"data row0 col20\" >454</td>\n",
              "      <td id=\"T_d9f22_row0_col21\" class=\"data row0 col21\" >421</td>\n",
              "      <td id=\"T_d9f22_row0_col22\" class=\"data row0 col22\" >451</td>\n",
              "      <td id=\"T_d9f22_row0_col23\" class=\"data row0 col23\" >432</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th id=\"T_d9f22_level0_row1\" class=\"row_heading level0 row1\" >Credit Card</th>\n",
              "      <td id=\"T_d9f22_row1_col0\" class=\"data row1 col0\" >386</td>\n",
              "      <td id=\"T_d9f22_row1_col1\" class=\"data row1 col1\" >420</td>\n",
              "      <td id=\"T_d9f22_row1_col2\" class=\"data row1 col2\" >376</td>\n",
              "      <td id=\"T_d9f22_row1_col3\" class=\"data row1 col3\" >381</td>\n",
              "      <td id=\"T_d9f22_row1_col4\" class=\"data row1 col4\" >373</td>\n",
              "      <td id=\"T_d9f22_row1_col5\" class=\"data row1 col5\" >440</td>\n",
              "      <td id=\"T_d9f22_row1_col6\" class=\"data row1 col6\" >361</td>\n",
              "      <td id=\"T_d9f22_row1_col7\" class=\"data row1 col7\" >444</td>\n",
              "      <td id=\"T_d9f22_row1_col8\" class=\"data row1 col8\" >422</td>\n",
              "      <td id=\"T_d9f22_row1_col9\" class=\"data row1 col9\" >385</td>\n",
              "      <td id=\"T_d9f22_row1_col10\" class=\"data row1 col10\" >420</td>\n",
              "      <td id=\"T_d9f22_row1_col11\" class=\"data row1 col11\" >382</td>\n",
              "      <td id=\"T_d9f22_row1_col12\" class=\"data row1 col12\" >422</td>\n",
              "      <td id=\"T_d9f22_row1_col13\" class=\"data row1 col13\" >396</td>\n",
              "      <td id=\"T_d9f22_row1_col14\" class=\"data row1 col14\" >432</td>\n",
              "      <td id=\"T_d9f22_row1_col15\" class=\"data row1 col15\" >390</td>\n",
              "      <td id=\"T_d9f22_row1_col16\" class=\"data row1 col16\" >468</td>\n",
              "      <td id=\"T_d9f22_row1_col17\" class=\"data row1 col17\" >364</td>\n",
              "      <td id=\"T_d9f22_row1_col18\" class=\"data row1 col18\" >354</td>\n",
              "      <td id=\"T_d9f22_row1_col19\" class=\"data row1 col19\" >452</td>\n",
              "      <td id=\"T_d9f22_row1_col20\" class=\"data row1 col20\" >424</td>\n",
              "      <td id=\"T_d9f22_row1_col21\" class=\"data row1 col21\" >424</td>\n",
              "      <td id=\"T_d9f22_row1_col22\" class=\"data row1 col22\" >427</td>\n",
              "      <td id=\"T_d9f22_row1_col23\" class=\"data row1 col23\" >443</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th id=\"T_d9f22_level0_row2\" class=\"row_heading level0 row2\" >Mobile Payment</th>\n",
              "      <td id=\"T_d9f22_row2_col0\" class=\"data row2 col0\" >416</td>\n",
              "      <td id=\"T_d9f22_row2_col1\" class=\"data row2 col1\" >400</td>\n",
              "      <td id=\"T_d9f22_row2_col2\" class=\"data row2 col2\" >391</td>\n",
              "      <td id=\"T_d9f22_row2_col3\" class=\"data row2 col3\" >369</td>\n",
              "      <td id=\"T_d9f22_row2_col4\" class=\"data row2 col4\" >419</td>\n",
              "      <td id=\"T_d9f22_row2_col5\" class=\"data row2 col5\" >376</td>\n",
              "      <td id=\"T_d9f22_row2_col6\" class=\"data row2 col6\" >413</td>\n",
              "      <td id=\"T_d9f22_row2_col7\" class=\"data row2 col7\" >301</td>\n",
              "      <td id=\"T_d9f22_row2_col8\" class=\"data row2 col8\" >435</td>\n",
              "      <td id=\"T_d9f22_row2_col9\" class=\"data row2 col9\" >446</td>\n",
              "      <td id=\"T_d9f22_row2_col10\" class=\"data row2 col10\" >371</td>\n",
              "      <td id=\"T_d9f22_row2_col11\" class=\"data row2 col11\" >500</td>\n",
              "      <td id=\"T_d9f22_row2_col12\" class=\"data row2 col12\" >382</td>\n",
              "      <td id=\"T_d9f22_row2_col13\" class=\"data row2 col13\" >449</td>\n",
              "      <td id=\"T_d9f22_row2_col14\" class=\"data row2 col14\" >463</td>\n",
              "      <td id=\"T_d9f22_row2_col15\" class=\"data row2 col15\" >439</td>\n",
              "      <td id=\"T_d9f22_row2_col16\" class=\"data row2 col16\" >406</td>\n",
              "      <td id=\"T_d9f22_row2_col17\" class=\"data row2 col17\" >404</td>\n",
              "      <td id=\"T_d9f22_row2_col18\" class=\"data row2 col18\" >428</td>\n",
              "      <td id=\"T_d9f22_row2_col19\" class=\"data row2 col19\" >391</td>\n",
              "      <td id=\"T_d9f22_row2_col20\" class=\"data row2 col20\" >428</td>\n",
              "      <td id=\"T_d9f22_row2_col21\" class=\"data row2 col21\" >426</td>\n",
              "      <td id=\"T_d9f22_row2_col22\" class=\"data row2 col22\" >437</td>\n",
              "      <td id=\"T_d9f22_row2_col23\" class=\"data row2 col23\" >404</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n"
            ]
          },
          "metadata": {}
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [],
      "metadata": {
        "id": "V4CKmzs8diUt"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "markdown",
      "source": [
        "**Питання 5. Ефективність меню.**"
      ],
      "metadata": {
        "id": "dmsoMitqdjWT"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "menu_analysis = df.groupby('Menu Item')['Quantity'].sum().sort_values(ascending=False)"
      ],
      "metadata": {
        "id": "Ug9taXH9dtGN"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "revenue_analysis = df.groupby('Menu Item')['Revenue'].sum().sort_values(ascending=False)"
      ],
      "metadata": {
        "id": "tmL7SeiCeNHH"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "resultnnn = pd.DataFrame({'Quantity': menu_analysis, 'Revenue': revenue_analysis})\n",
        "resultnnn = resultnnn.sort_values(by='Quantity', ascending=False)\n",
        "print(resultnnn)"
      ],
      "metadata": {
        "id": "8xY3XI8oeNg4"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "markdown",
      "source": [
        "**Питання 5. Які страви в меню найдорожчі і як часто їх купують?**"
      ],
      "metadata": {
        "id": "ip_pEkT-8mya"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "# Знайдемо найдорожчі страви\n",
        "top_price_items = df.groupby('Menu Item')['Price (per item)'].max().sort_values(ascending=False)\n",
        "\n",
        "# кількість продажів (кількість замовлених порцій)\n",
        "top_items_sales = df.groupby('Menu Item')['Quantity'].sum()\n",
        "\n",
        "# Об'єднання даних\n",
        "result = pd.DataFrame({'Price': top_price_items, 'Total Quantity Sold': top_items_sales})\n",
        "\n",
        "# Сортування за ціною\n",
        "result = result.sort_values(by='Price', ascending=False)\n",
        "\n",
        "print(result)"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "Bw7hWnd55bvh",
        "outputId": "26cdcd94-7745-4d27-e9ba-ae4797d36643"
      },
      "execution_count": 94,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "                     Price  Total Quantity Sold\n",
            "Menu Item                                      \n",
            "Fettuccine Alfredo    13.0                 3089\n",
            "Spaghetti Carbonara   12.0                 2983\n",
            "Lasagna               11.5                 2999\n",
            "Margherita Pizza      10.0                 2914\n",
            "Caprese Salad          8.0                 2821\n",
            "Minestrone Soup        7.0                 2990\n",
            "Tiramisu               6.5                 3148\n",
            "Panna Cotta            5.5                 3016\n",
            "Bruschetta             5.0                 2822\n",
            "Gelato                 4.5                 2998\n"
          ]
        }
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "Чи дорогі страви популярні?\n",
        "\n",
        "Якщо найдорожчі страви мають високу кількість продажів, це означає, що клієнти готові платити більше за преміальну їжу.\n",
        "Якщо кількість продажів низька, можливо, ці страви занадто дорогі або не відповідають очікуванням клієнтів.\n",
        "Які типи страв найдорожчі?\n",
        "\n",
        "Чи це стейки, морепродукти, екзотичні страви?\n",
        "Чи дорогі десерти або напої, які купують рідко, але з високою маржинальністю?\n",
        "Чи варто переглядати ціни?\n",
        "\n",
        "Якщо найдорожчі страви продаються рідко, можливо, потрібно знизити ціну або покращити рекламу.\n",
        "Якщо вони популярні, можна збільшити маржу або створити нові преміальні страви."
      ],
      "metadata": {
        "id": "AhhvZPTL6km1"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "sns.regplot(data = df, x = 'Quantity', y = 'Revenue', scatter_kws = {'alpha': 0.4}, line_kws = {'color': 'red'});"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 449
        },
        "id": "mIuiRsRGAiQW",
        "outputId": "142c3f8b-b636-4c55-9ade-4a2d0bf59ee4"
      },
      "execution_count": 7,
      "outputs": [
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 640x480 with 1 Axes>"
            ],
            "image/png": "\n"
          },
          "metadata": {}
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [],
      "metadata": {
        "id": "VnIC3gnWDWtN"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "markdown",
      "source": [
        "Графік показує залежність між кількістю проданих одиниць (Quantity) та виручкою (Revenue).\n",
        "\n",
        "Висновки:\n",
        "Позитивна кореляція – червона лінія тренду свідчить, що зі збільшенням кількості проданих товарів виручка також зростає. Це логічно, адже чим більше продано, тим вищий дохід.\n",
        "Різний рівень доходу при однаковій кількості продажів – видно, що для одного значення Quantity (наприклад, 3 чи 4) виручка варіюється. Це означає, що товари мають різні ціни.\n",
        "Деякі товари мають високу виручку навіть при малій кількості продажів – на графіку є точки з високим Revenue при низькому Quantity. Це можуть бути дорогі позиції меню, які продаються рідше, але приносять більше прибутку.\n",
        "Групування точок – продажі найчастіше відбуваються в межах 1-5 одиниць за раз, що вказує на середній розмір замовлення клієнтів."
      ],
      "metadata": {
        "id": "OvOMvYcFDXRs"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "\n",
        "pivot = df.pivot_table(index=['Category'], columns=['Payment Method'], values=['Revenue'])\n",
        "display(pivot.style.background_gradient(axis=0))\n"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 206
        },
        "id": "isFJbSmpJqZ1",
        "outputId": "a71018c5-2ca3-4666-fc2c-ea257b4ca486"
      },
      "execution_count": 31,
      "outputs": [
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<pandas.io.formats.style.Styler at 0x7d75d387fa10>"
            ],
            "text/html": [
              "<style type=\"text/css\">\n",
              "#T_f5481_row0_col0 {\n",
              "  background-color: #e5e1ef;\n",
              "  color: #000000;\n",
              "}\n",
              "#T_f5481_row0_col1 {\n",
              "  background-color: #d9d8ea;\n",
              "  color: #000000;\n",
              "}\n",
              "#T_f5481_row0_col2 {\n",
              "  background-color: #dddbec;\n",
              "  color: #000000;\n",
              "}\n",
              "#T_f5481_row1_col0, #T_f5481_row1_col1, #T_f5481_row1_col2 {\n",
              "  background-color: #fff7fb;\n",
              "  color: #000000;\n",
              "}\n",
              "#T_f5481_row2_col0, #T_f5481_row2_col1, #T_f5481_row2_col2 {\n",
              "  background-color: #023858;\n",
              "  color: #f1f1f1;\n",
              "}\n",
              "</style>\n",
              "<table id=\"T_f5481\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr>\n",
              "      <th class=\"blank level0\" >&nbsp;</th>\n",
              "      <th id=\"T_f5481_level0_col0\" class=\"col_heading level0 col0\" colspan=\"3\">Revenue</th>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th class=\"index_name level1\" >Payment Method</th>\n",
              "      <th id=\"T_f5481_level1_col0\" class=\"col_heading level1 col0\" >Cash</th>\n",
              "      <th id=\"T_f5481_level1_col1\" class=\"col_heading level1 col1\" >Credit Card</th>\n",
              "      <th id=\"T_f5481_level1_col2\" class=\"col_heading level1 col2\" >Mobile Payment</th>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th class=\"index_name level0\" >Category</th>\n",
              "      <th class=\"blank col0\" >&nbsp;</th>\n",
              "      <th class=\"blank col1\" >&nbsp;</th>\n",
              "      <th class=\"blank col2\" >&nbsp;</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th id=\"T_f5481_level0_row0\" class=\"row_heading level0 row0\" >Appetizer</th>\n",
              "      <td id=\"T_f5481_row0_col0\" class=\"data row0 col0\" >19.376754</td>\n",
              "      <td id=\"T_f5481_row0_col1\" class=\"data row0 col1\" >20.363735</td>\n",
              "      <td id=\"T_f5481_row0_col2\" class=\"data row0 col2\" >19.852492</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th id=\"T_f5481_level0_row1\" class=\"row_heading level0 row1\" >Dessert</th>\n",
              "      <td id=\"T_f5481_row1_col0\" class=\"data row1 col0\" >16.313307</td>\n",
              "      <td id=\"T_f5481_row1_col1\" class=\"data row1 col1\" >16.746943</td>\n",
              "      <td id=\"T_f5481_row1_col2\" class=\"data row1 col2\" >16.426485</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th id=\"T_f5481_level0_row2\" class=\"row_heading level0 row2\" >Main Course</th>\n",
              "      <td id=\"T_f5481_row2_col0\" class=\"data row2 col0\" >35.628926</td>\n",
              "      <td id=\"T_f5481_row2_col1\" class=\"data row2 col1\" >33.884497</td>\n",
              "      <td id=\"T_f5481_row2_col2\" class=\"data row2 col2\" >34.228907</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n"
            ]
          },
          "metadata": {}
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "from statsmodels.stats.weightstats import ztest\n"
      ],
      "metadata": {
        "id": "mac_nD7DVqEk"
      },
      "execution_count": 41,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "credit_card_revenue = df[df['Payment Method'] == 'Credit Card']['Revenue']\n",
        "cash_revenue = df[df['Payment Method'] == 'Cash']['Revenue']\n",
        "\n",
        "# Виконуємо Z-тест\n",
        "z_stat, p_value = ztest(credit_card_revenue, cash_revenue)\n",
        "\n",
        "# Виводимо результати\n",
        "print(f\"Z-статистика: {z_stat:.2f}\")\n",
        "print(f\"P-значення: {p_value:.4f}\")\n",
        "\n",
        "# Перевірка гіпотези\n",
        "alpha = 0.05\n",
        "if p_value < alpha:\n",
        "    print(\"Відхиляємо нульову гіпотезу. Середній дохід значно відрізняється для цих методів оплати.\")\n",
        "else:\n",
        "    print(\"Не можемо відхилити нульову гіпотезу. Немає статистично значущої різниці між середнім доходом.\")"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "9mRMbIrgVrZs",
        "outputId": "735b26b3-f396-4539-e793-334a7f0ac88e"
      },
      "execution_count": 42,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Z-статистика: -1.34\n",
            "P-значення: 0.1812\n",
            "Не можемо відхилити нульову гіпотезу. Немає статистично значущої різниці між середнім доходом.\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "df_numeric = df.select_dtypes(include=['number'])\n",
        "\n",
        "# Обчислюємо кореляційну матрицю\n",
        "matrix = np.triu(df_numeric.corr())\n",
        "\n",
        "# Будуємо heatmap\n",
        "plt.figure(figsize=(8,6))\n",
        "sns.heatmap(df_numeric.corr(), annot=True, cmap=\"rocket\", mask=matrix, fmt=\".2f\", linewidths=0.5)\n",
        "\n",
        "plt.title(\"Кореляційна матриця\")\n",
        "plt.show()"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 545
        },
        "id": "Kl71BUpKZgBM",
        "outputId": "b2393709-34a8-4059-e51d-814318a515b2"
      },
      "execution_count": 105,
      "outputs": [
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 800x600 with 2 Axes>"
            ],
            "image/png": "\n"
          },
          "metadata": {}
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "menu_analysis = df.groupby('Menu Item')['Quantity'].sum().sort_values(ascending=False)\n",
        "display(menu_analysis)"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 429
        },
        "id": "jEkXdeUuXUYP",
        "outputId": "ff537574-b447-42f5-ad5c-453285f6ac04"
      },
      "execution_count": 95,
      "outputs": [
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "Menu Item\n",
              "Tiramisu               3148\n",
              "Fettuccine Alfredo     3089\n",
              "Panna Cotta            3016\n",
              "Lasagna                2999\n",
              "Gelato                 2998\n",
              "Minestrone Soup        2990\n",
              "Spaghetti Carbonara    2983\n",
              "Margherita Pizza       2914\n",
              "Bruschetta             2822\n",
              "Caprese Salad          2821\n",
              "Name: Quantity, dtype: int64"
            ],
            "text/html": [
              "<div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>Quantity</th>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>Menu Item</th>\n",
              "      <th></th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>Tiramisu</th>\n",
              "      <td>3148</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>Fettuccine Alfredo</th>\n",
              "      <td>3089</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>Panna Cotta</th>\n",
              "      <td>3016</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>Lasagna</th>\n",
              "      <td>2999</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>Gelato</th>\n",
              "      <td>2998</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>Minestrone Soup</th>\n",
              "      <td>2990</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>Spaghetti Carbonara</th>\n",
              "      <td>2983</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>Margherita Pizza</th>\n",
              "      <td>2914</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>Bruschetta</th>\n",
              "      <td>2822</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>Caprese Salad</th>\n",
              "      <td>2821</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div><br><label><b>dtype:</b> int64</label>"
            ]
          },
          "metadata": {}
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "\n",
        "resultnnn = pd.DataFrame({'Quantity': menu_analysis, 'Revenue': revenue_analysis})\n",
        "resultnnn = resultnnn.sort_values(by='Quantity', ascending=False)\n",
        "print(resultnnn)\n"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "MeXyny5qYelR",
        "outputId": "90efe603-f480-4dae-a124-1a04c355381e"
      },
      "execution_count": 104,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "                     Quantity  Revenue\n",
            "Menu Item                             \n",
            "Tiramisu                 3148  20462.0\n",
            "Fettuccine Alfredo       3089  40157.0\n",
            "Panna Cotta              3016  16588.0\n",
            "Lasagna                  2999  34488.5\n",
            "Gelato                   2998  13491.0\n",
            "Minestrone Soup          2990  20930.0\n",
            "Spaghetti Carbonara      2983  35796.0\n",
            "Margherita Pizza         2914  29140.0\n",
            "Bruschetta               2822  14110.0\n",
            "Caprese Salad            2821  22568.0\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "revenue_analysis = df.groupby('Menu Item')['Revenue'].sum().sort_values(ascending=False)\n",
        "display(revenue_analysis)"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 429
        },
        "id": "RXp5BqGQXdyc",
        "outputId": "73e77b51-467c-4634-8864-c846903629ed"
      },
      "execution_count": 96,
      "outputs": [
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "Menu Item\n",
              "Fettuccine Alfredo     40157.0\n",
              "Spaghetti Carbonara    35796.0\n",
              "Lasagna                34488.5\n",
              "Margherita Pizza       29140.0\n",
              "Caprese Salad          22568.0\n",
              "Minestrone Soup        20930.0\n",
              "Tiramisu               20462.0\n",
              "Panna Cotta            16588.0\n",
              "Bruschetta             14110.0\n",
              "Gelato                 13491.0\n",
              "Name: Revenue, dtype: float64"
            ],
            "text/html": [
              "<div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>Revenue</th>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>Menu Item</th>\n",
              "      <th></th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>Fettuccine Alfredo</th>\n",
              "      <td>40157.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>Spaghetti Carbonara</th>\n",
              "      <td>35796.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>Lasagna</th>\n",
              "      <td>34488.5</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>Margherita Pizza</th>\n",
              "      <td>29140.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>Caprese Salad</th>\n",
              "      <td>22568.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>Minestrone Soup</th>\n",
              "      <td>20930.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>Tiramisu</th>\n",
              "      <td>20462.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>Panna Cotta</th>\n",
              "      <td>16588.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>Bruschetta</th>\n",
              "      <td>14110.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>Gelato</th>\n",
              "      <td>13491.0</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div><br><label><b>dtype:</b> float64</label>"
            ]
          },
          "metadata": {}
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "avg_revenue = df.groupby('Menu Item')['Revenue'].mean().sort_values(ascending=False)\n",
        "display(avg_revenue)\n"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 429
        },
        "id": "W-pXHtKAX937",
        "outputId": "0c189e23-6946-4566-b19c-5bea69d49150"
      },
      "execution_count": 97,
      "outputs": [
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "Menu Item\n",
              "Fettuccine Alfredo     38.761583\n",
              "Spaghetti Carbonara    35.476710\n",
              "Lasagna                34.079545\n",
              "Margherita Pizza       29.795501\n",
              "Caprese Salad          23.881481\n",
              "Minestrone Soup        20.950951\n",
              "Tiramisu               19.450570\n",
              "Panna Cotta            16.199219\n",
              "Bruschetta             14.728601\n",
              "Gelato                 13.668693\n",
              "Name: Revenue, dtype: float64"
            ],
            "text/html": [
              "<div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>Revenue</th>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>Menu Item</th>\n",
              "      <th></th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>Fettuccine Alfredo</th>\n",
              "      <td>38.761583</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>Spaghetti Carbonara</th>\n",
              "      <td>35.476710</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>Lasagna</th>\n",
              "      <td>34.079545</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>Margherita Pizza</th>\n",
              "      <td>29.795501</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>Caprese Salad</th>\n",
              "      <td>23.881481</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>Minestrone Soup</th>\n",
              "      <td>20.950951</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>Tiramisu</th>\n",
              "      <td>19.450570</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>Panna Cotta</th>\n",
              "      <td>16.199219</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>Bruschetta</th>\n",
              "      <td>14.728601</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>Gelato</th>\n",
              "      <td>13.668693</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div><br><label><b>dtype:</b> float64</label>"
            ]
          },
          "metadata": {}
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "category_revenue = df.groupby('Category')['Revenue'].sum().sort_values(ascending=False)\n",
        "display(category_revenue)"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 210
        },
        "id": "7Q-VV1wHYM2B",
        "outputId": "13334e3d-0c51-409f-a58f-2a22920e1166"
      },
      "execution_count": 98,
      "outputs": [
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "Category\n",
              "Main Course    139581.5\n",
              "Appetizer       57608.0\n",
              "Dessert         50541.0\n",
              "Name: Revenue, dtype: float64"
            ],
            "text/html": [
              "<div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>Revenue</th>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>Category</th>\n",
              "      <th></th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>Main Course</th>\n",
              "      <td>139581.5</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>Appetizer</th>\n",
              "      <td>57608.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>Dessert</th>\n",
              "      <td>50541.0</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div><br><label><b>dtype:</b> float64</label>"
            ]
          },
          "metadata": {}
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "df['Avg_Price'] = df['Revenue'] / df['Quantity']\n",
        "\n",
        "# Побудова scatter plot\n",
        "plt.figure(figsize=(9, 4))\n",
        "sns.scatterplot(data=df, x='Avg_Price', y='Quantity', hue='Menu Item', palette='viridis', s=100, alpha=0.7)\n",
        "\n",
        "# Додаємо підписи осей і заголовок\n",
        "plt.xlabel('Average Price per Item ($)')\n",
        "plt.ylabel('Quantity Sold')\n",
        "plt.title('Scatter Plot: Price vs Quantity Sold')\n",
        "plt.legend(loc='upper right', bbox_to_anchor=(1.3, 1))  # Відображаємо легенду\n",
        "plt.grid(True)\n",
        "\n",
        "# Відображаємо графік\n",
        "plt.show()"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 410
        },
        "id": "HY4O_4WzejAy",
        "outputId": "d6759507-299b-42e8-ede3-c10ee5235402"
      },
      "execution_count": 109,
      "outputs": [
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 900x400 with 1 Axes>"
            ],
            "image/png": "\n"
          },
          "metadata": {}
        }
      ]
    }
  ]
}